{
  authorized_keys = { 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA9HMovvCGf9s/lskZ/u3XQnl7Edv4Wsiu5UN4eOSKXaETaew1xA6Kbl9r0F4rym/wGKNoeHdWqu+/iAZdowFfnBYdvPBjPKjWjs2jySO2BnOgIyj78dERb+9Frdmz/kopHVi1QGOOnK0rR2aIfmF8p5oQDvh2jVLkSNhJLolc8kAxlSRsb01GGT6ykbHqtvU5Vzh5oWRA1gNneyl8S+ED7ItK0X9JBfs266NTbHdW0wKfhIf6rdk4hE7nJzSY5kEe75v69A2OeJN7MGx+0rmImLbl3RrsTozyZVM9LwPLSe8qCaUwbqBJ55GIcTyK31AKT8Pqqjvft5sxFyP1XmGodw== info@freifunk.tk' },

  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'zzzzzz-',

  -- Name of the community.
  site_name = 'Freifunk Ottobrunn',

  -- Shorthand of the community.
  site_code = 'ffotn.init.tk',

  opkg = {
    openwrt = 'http://openwrt.draic.info/%n/%v/%S/packages',
  },

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.120.0.0/21',
  prefix6 = 'fdef:ffc0:4ffa:0::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'0.ntp.tecff.de', '1.ntp.tecff.de'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ap = {
      ssid = '1.ottobrunn.freifunk.tk',
      -- disabled = true, (optional)
    },

    mesh = {
      -- Adjust these values!
      id = '*ca*fe*42*00*00*01*',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = '44.ottobrunn.freifunk.tk',
    },
    mesh = {
      id = '*ca*fe*42*00*00*44*',
      mcast_rate = 12000,
    },

  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.120.0.1',
    ip6 = 'fdef:ffc0:4ffa:0::1',

    -- anycast MAC of all nodes
    mac = '16:41:95:40:f7:ad',
  },

  -- Options specific to routing protocols (optional)
  mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      gw_sel_class = 3,
    },
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    -- enabled = true,
    -- configurable = true,

    mtu = 1280,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          peer1 = {
            key = '917301c31690501c2e11868dbd9f7b430f0643baca38da0a0e7be0e71fd86eb2',

            -- This is a list, so you might add multiple entries.
            remotes = {
              '"fastd01.tecff.de" port 10001',
              '"fastd01.tecff.net" port 10001',
            },
          },
          peer2 = {
            key = 'a8ace044efbd1b8279c8110cd79f230688b81027465ae9252a49b0d474be2e32',
            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
            remotes = {
              '"fastd02.tecff.de" port 10002',
              '"fastd02.tecff.net" port 10002',
            },
          },
          peer3 = {
            key = '917d7890447588e6c8b75c61adc790cf609dd6a8f5c86878e51f60b281b0a2c4',
            remotes = {
              '"fastd03.tecff.de" port 10003',
              '"fastd03.tecff.net" port 10003',
            },
          },
          peer4 = {
            key = 'bd582fe8dc230d274663700be829db6a0376ffa6b25dbb58662598e78ebb0c04',
            remotes = {
              '"fastd04.tecff.de" port 10004',
              '"fastd04.tecff.net" port 10004',
            },
          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    enabled = 1,

    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://updates.ottobrunn.freifunk.tk/firmware/stable/sysupgrade',
          'http://updates.ottobrunn.freifunk.port0.org/firmware/stable/sysupgrade',
          'http://updates.ottobrunn.freifunk.topcat.io/firmware/stable/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '6a60f57628de0b9f66dfaa794a27fe45e16cdc6550f342c68057dc299c38c365', -- Christian
          'a9ba1d78b5d48d1539c5c6824ca62d8c7ce7a79913d2f3fcf28e4f7fe4e777a8', -- walter hartl
          'ed09d23552225f71da8a3763b17a09eb8e126ad3c4938275bd51d6d564e0ac0b', -- walter henz
          'a5f145b5b7026cf4245cba16365c526d32ae0ce3e2090140da862b36c2b8a5ce', -- rotanid
          '4a6836a4b34ed35f34a7ff7bbbc95e55f648f413e51a461788550327b88231bc', -- aufhaxer
        },
      },
      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://updates.ottobrunn.freifunk.tk/firmware/experimental/sysupgrade',
          'http://updates.ottobrunn.freifunk.port0.org/firmware/experimental/sysupgrade',
          'http://updates.ottobrunn.freifunk.topcat.io/firmware/experimental/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '6a60f57628de0b9f66dfaa794a27fe45e16cdc6550f342c68057dc299c38c365', -- Christian
          'a9ba1d78b5d48d1539c5c6824ca62d8c7ce7a79913d2f3fcf28e4f7fe4e777a8', -- walter hartl
          'ed09d23552225f71da8a3763b17a09eb8e126ad3c4938275bd51d6d564e0ac0b', -- walter henz
          'a5f145b5b7026cf4245cba16365c526d32ae0ce3e2090140da862b36c2b8a5ce', -- rotanid
          '4a6836a4b34ed35f34a7ff7bbbc95e55f648f413e51a461788550327b88231bc', -- aufhaxer
        },
      },
    },
  },

  -- Node roles
  roles = {
    default = 'node',
    list = {
      'node',
      'test',
      'backbone',
      'service',
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
